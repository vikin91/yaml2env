name: Publish new release

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  publish-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    steps:
      - uses: actions/checkout@v3
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Persist Version
        run: |
          echo ${{ env.RELEASE_VERSION }} > version.txt
      - name: Upload math result for job 1
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ env.RELEASE_VERSION }}
          path: ./CHANGELOG.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}

  cross-compile:
    name: Cross Compile
    needs: publish-release
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use_cross: true
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            use_cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
            use_cross: false
          # - os: macos-latest
          #   target: aarch64-apple-darwin
    steps:
      - name: Download version artifact
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Parse version
        shell: bash
        run: |
          VERSION=`cat version.txt`
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          ref: refs/tags/${{ env.RELEASE_VERSION }}
      - uses: actions/cache@v3.0.1
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.use_cross }}
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Calculate checksums macos
        if: matrix.os == 'macos-latest'
        run: |
          shasum -a 256 target/${{ matrix.target }}/release/yaml2env | sed 's, .*/,  ,' > target/${{ matrix.target }}/release/yaml2env.sha256.txt
      - name: Calculate checksums ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          sha256sum target/${{ matrix.target }}/release/yaml2env | sed 's, .*/,  ,' > target/${{ matrix.target }}/release/yaml2env.sha256.txt
      - name: Upload binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/yaml2env
          asset_name: yaml2env-${{ matrix.target }}
          tag: ${{ env.RELEASE_VERSION }}
          overwrite: true
      - name: Upload sha256sum
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/yaml2env.sha256.txt
          asset_name: yaml2env-${{ matrix.target }}.sha256.txt
          tag: ${{ env.RELEASE_VERSION }}
          overwrite: true
